# -*- coding: utf-8 -*-
"""Wk 6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iT2eZybUbGZZF0Ulcg1x6OG9X6BlAxXy
"""



"""# Task
Import pandas, numpy, matplotlib, and requests. Create a numpy array from 1 to 10 and calculate its mean. Create a pandas DataFrame and display summary statistics. Fetch data from a public API using requests and print a key piece of information. Plot a simple line graph using matplotlib.

## Import libraries

### Subtask:
Import the required libraries (pandas, numpy, matplotlib, requests).

**Reasoning**:
The subtask is to import the required libraries. I will import pandas, numpy, matplotlib.pyplot, and requests in a single code block.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import requests

"""## Numpy array creation and mean calculation

### Subtask:
Create a NumPy array from 1 to 10 and calculate its mean.

**Reasoning**:
Create a NumPy array, calculate its mean, and print both.
"""

numpy_array = np.arange(1, 11)
array_mean = np.mean(numpy_array)
print("NumPy array:", numpy_array)
print("Mean of the array:", array_mean)

"""## Pandas dataframe creation and summary statistics

### Subtask:
Load a small dataset into a pandas DataFrame and display summary statistics.

**Reasoning**:
Create a pandas DataFrame from a dictionary and display its summary statistics.
"""

data = {'numerical_col': [10, 20, 30, 40, 50],
        'categorical_col': ['A', 'B', 'A', 'C', 'B']}
df = pd.DataFrame(data)
display(df.describe(include='all'))

"""## Fetch data from a public api using requests

### Subtask:
Fetch data from a public API using requests and print a key piece of information.

**Reasoning**:
Define the API URL, send a GET request, check the status code, parse the JSON response, and print a key piece of information.
"""

api_url = "https://rickandmortyapi.com/api/character/1"
response = requests.get(api_url)

if response.status_code == 200:
    data = response.json()
    print("Character Name:", data['name'])
else:
    print(f"Error fetching data: {response.status_code}")

"""## Matplotlib plotting

### Subtask:
Create a simple line plot using matplotlib.

**Reasoning**:
Create sample data for the line plot and generate the plot with labels and a title.
"""

x_values = np.arange(1, 11)
y_values = x_values * 2

plt.plot(x_values, y_values)
plt.xlabel("X-axis Label")
plt.ylabel("Y-axis Label")
plt.title("Simple Line Plot")
plt.show()

"""## Summary:

### Data Analysis Key Findings

*   A NumPy array was successfully created from 1 to 10, and its mean was calculated as 5.5.
*   A pandas DataFrame with both numerical and categorical columns was created, and its comprehensive summary statistics were displayed.
*   Data was successfully fetched from the specified public API, and the character name ('Rick Sanchez') was extracted and printed.
*   A simple line plot using Matplotlib was generated, including axis labels and a title.

### Insights or Next Steps

*   This process demonstrates the fundamental usage of key Python libraries for data manipulation, analysis, and visualization.
*   The next steps could involve performing more complex operations with these libraries, such as data cleaning, transformation, advanced statistical analysis, or creating more sophisticated visualizations.

"""